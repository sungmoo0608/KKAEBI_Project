<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.ict.ex.transaction.mapper.TransactionMapper">

	<resultMap id="TransactionResultMap"  	type="edu.ict.ex.transaction.vo.TransactionVO">
		<id property="user_id" 				column="user_id" />
		<result property="name" 			column="name" />
		<result property="account_no" 		column="account_no" />
		<result property="tr_seqno" 		column="tr_seqno" />
		<result property="goods_gubun" 		column="goods_gubun" />
		<result property="goods_gubun_nm" 	column="goods_gubun_nm" />
		<result property="goods_code" 		column="goods_code" />
		<result property="goods_name" 		column="goods_name" />
		<result property="provider_code" 	column="provider_code" />
		<result property="provider_nm" 		column="provider_nm" />
		<result property="tran_unit" 		column="tran_unit" />
		<result property="period_mm" 		column="period_mm" />
		<result property="invest_gubun" 	column="invest_gubun" />
		<result property="mangi_date" 		column="mangi_date" />
		<result property="curprice" 		column="curprice" />
		<result property="ija_amt" 			column="ija_amt" />
		<result property="tr_number" 		column="tr_number" />
		<result property="trforign_amt"		column="trforign_amt" />
		<result property="tr_amt" 			column="tr_amt" />
		<result property="haeji_amt" 		column="haeji_amt" />
	</resultMap>

	<select id="getTransactionInitFetch" resultMap="TransactionResultMap">
		<![CDATA[
			select a.user_id,a.name, b.account_no,c.goods_gubun,
                	case 
                    	when c.goods_gubun = 1 then '예금'
                    	when c.goods_gubun = 2 then '펀드'
                        when c.goods_gubun = 3 then '외화'
                        when c.goods_gubun = 4 then '주식'
                        else ' '
                        end as goods_gubun_nm,
                	c.goods_code,c.goods_name,c.provider_code,d.codevalue_cmmt provider_nm,
                	c.tran_unit,c.period_mm,c.invest_gubun,
 					case
    					when c.goods_gubun = 1 then to_char((SELECT ADD_MONTHS(sysdate, c.period_mm) FROM dual),'yyyy/mm/dd')
    					else ' ' 
 						end as mangi_date,   
 					case 
   						when c.goods_gubun = 1 then (select interest_rate  from interestrate_his where goods_code = c.goods_code and period_mm = c.period_mm and status	 = 1)
    					when c.goods_gubun = 2 then (select trbase_price  from baseprice_his where goods_code = c.goods_code and base_date = to_char(sysdate,'yyyymmdd')  and status	 = 1)
    					when c.goods_gubun = 3 then (select exchange_rate  from exchangerate_his where goods_code = c.goods_code and base_date = to_char(sysdate,'yyyymmdd') 
       						and seq_no = (select max(seq_no)  from exchangerate_his where goods_code = c.goods_code and base_date = to_char(sysdate,'yyyymmdd') and status	 = 1))
    					when c.goods_gubun = 4 then (select stock_price  from stockprice_his where goods_code = c.goods_code and base_date = to_char(sysdate,'yyyymmdd') 
       						and seq_no = (select max(seq_no)  from stockprice_his where goods_code = c.goods_code and base_date = to_char(sysdate,'yyyymmdd') and status	 = 1))
 						else 0
 						end as curprice
			from customer_mas a,account_mas b,goods_mas c,code_val d
			where a.user_id = #{user_id}
               	and b.ref_status = 1
				and a.user_id = b.user_id
				and c.goods_status = 1
				and c.goods_code = #{goods_code}
                and d.code_gubun = 'bnk_gubun'
                and d.code_value = c.provider_code		
      	]]>

	</select>

	<resultMap id="TransactionCheckResultMap"  	type="edu.ict.ex.transaction.vo.TransactionVO">
		<id property="user_id" 				column="user_id" />
		<result property="name" 			column="name" />
		<result property="account_no" 		column="account_no" />
		<result property="tr_seqno" 		column="tr_seqno" />
		<result property="goods_gubun" 		column="goods_gubun" />
		<result property="goods_gubun_nm" 	column="goods_gubun_nm" />
		<result property="goods_code" 		column="goods_code" />
		<result property="goods_name" 		column="goods_name" />
		<result property="provider_code" 	column="provider_code" />
		<result property="provider_nm" 		column="provider_nm" />
		<result property="tran_unit" 		column="tran_unit" />
		<result property="period_mm" 		column="period_mm" />
		<result property="invest_gubun" 	column="invest_gubun" />
		<result property="mangi_date" 		column="mangi_date" />
		<result property="curprice" 		column="curprice" />
		<result property="ija_amt" 			column="ija_amt" />
		<result property="tr_number" 		column="tr_number" />
		<result property="trforign_amt"		column="trforign_amt" />
		<result property="tr_amt" 			column="tr_amt" />
		<result property="haeji_amt" 		column="haeji_amt" />
	</resultMap>

	<select id="getTransactionCheckFetch" resultMap="TransactionCheckResultMap">
		<![CDATA[
			            select aa.user_id,aa.name,aa.account_no,aa.goods_gubun,aa.goods_gubun_nm,
                aa.goods_code,aa.goods_name,aa.provider_code,aa.provider_nm,
                aa.tran_unit,aa.period_mm,aa.invest_gubun,aa.mangi_date,aa.curprice,
 					case 
   						when aa.goods_gubun = 1 then 
                            case when aa.period_mm = 6 then (round((aa.curprice  * #{tr_amt}) / 100 * 0.5)) 
                                 when aa.period_mm = 12 then (round((aa.curprice * #{tr_amt}) / 100 * 1.0))
                                 when aa.period_mm = 24 then (round((aa.curprice * #{tr_amt}) / 100 * 2.0))
                                 when aa.period_mm = 36 then (round((aa.curprice * #{tr_amt}) / 100 * 3.0))
                                 else 0 end
                        else 0
                        end as ija_amt,
                    case     
   						when aa.goods_gubun = 2 then  (round((#{tr_amt} / aa.curprice) * aa.tran_unit))
   						when aa.goods_gubun = 3 then  (round((#{tr_amt} / aa.curprice) * aa.tran_unit))
   						when aa.goods_gubun = 4 then  (round((#{tr_amt} / aa.curprice) * aa.tran_unit))
                        else #{tr_amt}
                        end as tr_number,
                   #{tr_amt} tr_amt     
            from    
            (
        	select a.user_id,a.name, b.account_no,c.goods_gubun,
                	case 
                    	when c.goods_gubun = 1 then '예금'
                    	when c.goods_gubun = 2 then '펀드'
                        when c.goods_gubun = 3 then '외화'
                        when c.goods_gubun = 4 then '주식'
                        else ' '
                        end as goods_gubun_nm,
                	c.goods_code,c.goods_name,c.provider_code,d.codevalue_cmmt provider_nm,
                    c.tran_unit,c.period_mm,c.invest_gubun,
 					case
    					when c.goods_gubun = 1 then to_char((SELECT ADD_MONTHS(sysdate, c.period_mm) FROM dual),'yyyy/mm/dd')
    					else ' ' 
 						end as mangi_date,   
 					case 
   						when c.goods_gubun = 1 then (select interest_rate  from interestrate_his where goods_code = c.goods_code and period_mm = c.period_mm and status	 = 1)
    					when c.goods_gubun = 2 then (select trbase_price  from baseprice_his where goods_code = c.goods_code and base_date = to_char(sysdate,'yyyymmdd')  and status	 = 1)
    					when c.goods_gubun = 3 then (select exchange_rate  from exchangerate_his where goods_code = c.goods_code and base_date = to_char(sysdate,'yyyymmdd') 
       						and seq_no = (select max(seq_no)  from exchangerate_his where goods_code = c.goods_code and base_date = to_char(sysdate,'yyyymmdd') and status	 = 1))
    					when c.goods_gubun = 4 then (select stock_price  from stockprice_his where goods_code = c.goods_code and base_date = to_char(sysdate,'yyyymmdd') 
       						and seq_no = (select max(seq_no)  from stockprice_his where goods_code = c.goods_code and base_date = to_char(sysdate,'yyyymmdd') and status	 = 1))
 						else 0
 						end as curprice
			from customer_mas a,account_mas b,goods_mas c,code_val d
			where a.user_id = #{user_id}
               	and b.ref_status = 1
				and a.user_id = b.user_id
				and c.goods_status = 1
				and c.goods_code = #{goods_code}
                and d.code_gubun = 'bnk_gubun'
                and d.code_value = c.provider_code	
            ) aa         	
      	]]>

	</select>


	<resultMap id="TransactionRecheckResultMap"  	type="edu.ict.ex.transaction.vo.TransactionVO">
		<id property="user_id" 				column="user_id" />
		<result property="name" 			column="name" />
		<result property="account_no" 		column="account_no" />
		<result property="tr_seqno" 		column="tr_seqno" />
		<result property="goods_gubun" 		column="goods_gubun" />
		<result property="goods_gubun_nm" 	column="goods_gubun_nm" />
		<result property="goods_code" 		column="goods_code" />
		<result property="goods_name" 		column="goods_name" />
		<result property="provider_code" 	column="provider_code" />
		<result property="provider_nm" 		column="provider_nm" />
		<result property="tran_unit" 		column="tran_unit" />
		<result property="period_mm" 		column="period_mm" />
		<result property="invest_gubun" 	column="invest_gubun" />
		<result property="mangi_date" 		column="mangi_date" />
		<result property="curprice" 		column="curprice" />
		<result property="ija_amt" 			column="ija_amt" />
		<result property="tr_number" 		column="tr_number" />
		<result property="trforign_amt"		column="trforign_amt" />
		<result property="tr_amt" 			column="tr_amt" />
		<result property="haeji_amt" 		column="haeji_amt" />
	</resultMap>

	<select id="getTransactionRecheckFetch" resultMap="TransactionRecheckResultMap">
		<![CDATA[
				select bb.user_id,bb.name,bb.account_no,bb.tr_seqno,bb.goods_gubun,bb.goods_gubun_nm,
                bb.goods_code,bb.goods_name,bb.provider_code,bb.provider_nm,
                bb.tran_unit,bb.period_mm,bb.invest_gubun,bb.mangi_date,bb.curprice,
				bb.ija_amt ,  bb.tr_amt   ,bb.trforign_amt , bb.tr_number ,(bb.tr_amt + bb.ija_amt) haeji_amt
				from
				(
			            select aa.user_id,aa.name,aa.account_no,aa.tr_seqno,aa.goods_gubun,aa.goods_gubun_nm,
                aa.goods_code,aa.goods_name,aa.provider_code,aa.provider_nm,
                aa.tran_unit,aa.period_mm,aa.invest_gubun,aa.mangi_date,aa.curprice,
 				case 
   					when aa.goods_gubun = 1 then 
                        case when aa.period_mm = 6 then (round((aa.curprice  * aa.tr_amt) / 100 * 0.5)) 
                            when aa.period_mm = 12 then (round((aa.curprice * aa.tr_amt) / 100 * 1.0))
                            when aa.period_mm = 24 then (round((aa.curprice * aa.tr_amt) / 100 * 2.0))
                            when aa.period_mm = 36 then (round((aa.curprice * aa.tr_amt ) / 100 * 3.0))
                            else 0 end
                        else 0
                        end as ija_amt ,  aa.tr_amt   ,aa.trforign_amt , aa.tr_number  
            from    
            (
        	select a.user_id,a.name, b.account_no,e.tr_seqno,c.goods_gubun,
                	case 
                    	when c.goods_gubun = 1 then '예금'
                    	when c.goods_gubun = 2 then '펀드'
                        when c.goods_gubun = 3 then '외화'
                        when c.goods_gubun = 4 then '주식'
                        else ' '
                        end as goods_gubun_nm,
                	c.goods_code,c.goods_name,c.provider_code,d.codevalue_cmmt provider_nm,
                    c.tran_unit,c.period_mm,c.invest_gubun,
 					case
    					when c.goods_gubun = 1 then to_char((SELECT ADD_MONTHS(e.tr_datetime, c.period_mm) FROM dual),'yyyy/mm/dd')
    					else ' ' 
 						end as mangi_date,   
 					e.trbase_num curprice,e.trkwa_amt tr_amt ,e.trforign_amt , e.tr_number
			from customer_mas a,account_mas b,goods_mas c,code_val d,transaction_his e
			where a.user_id = #{user_id}
               	and b.ref_status = 1
				and a.user_id = b.user_id
				and c.goods_status = 1
				and c.goods_code = #{goods_code}
                and d.code_gubun = 'bnk_gubun'
                and d.code_value = c.provider_code	
                and e.account_no = b.account_no
                and e.tr_seqno = (select nvl(max(tr_seqno),0) from transaction_his 
                    where account_no = b.account_no
                    and goods_code = #{goods_code}
                    and trkwa_amt = #{tr_amt}
                    and to_char(tr_datetime,'yyyymmdd') =  to_char(sysdate,'yyyymmdd'))
            ) aa     
          )bb  	
      	]]>

	</select>






	<insert id="createTransactionDeposit">
		<![CDATA[
			INSERT INTO transaction_his 
			(account_no,tr_seqno,goods_code,tr_kind,trkwa_amt,trforign_amt,tr_number,trbase_num,trtaxbase_num,tr_status,tr_datetime)
			VALUES 
			(
				#{account_no}, 
			 	(select (nvl(max(tr_seqno),0)+1)  from transaction_his where account_no = #{account_no}),
				to_number(#{goods_code}),
				3,
				to_number(#{tr_amt}),
				0,
				0,
				to_number(#{curprice}),
				to_number(#{curprice}),
				1,
				sysdate
			)
		]]>
	</insert>

	<insert id="createTransactionFund">
		<![CDATA[
			INSERT INTO transaction_his 
			(account_no,tr_seqno,goods_code,tr_kind,trkwa_amt,trforign_amt,tr_number,trbase_num,trtaxbase_num,tr_status,tr_datetime)
			VALUES 
			(
				#{account_no}, 
			 	(select (nvl(max(tr_seqno),0)+1)  from transaction_his where account_no = #{account_no}),
				to_number(#{goods_code}),
				3,
				to_number(#{tr_amt}),
				0,
				to_number(#{tr_number}),
				to_number(#{curprice}),
				to_number(#{curprice}),
				1,
				sysdate
			)
		]]>
	</insert>

	<insert id="createTransactionExchange">
		<![CDATA[
			INSERT INTO transaction_his 
			(account_no,tr_seqno,goods_code,tr_kind,trkwa_amt,trforign_amt,tr_number,trbase_num,trtaxbase_num,tr_status,tr_datetime)
			VALUES 
			(
				#{account_no}, 
			 	(select (nvl(max(tr_seqno),0)+1)  from transaction_his where account_no = #{account_no}),
				to_number(#{goods_code}),
				3,
				to_number(#{tr_amt}),
				to_number(#{tr_number}),
				0,
				to_number(#{curprice}),
				to_number(#{curprice}),
				1,
				sysdate
			)
		]]>
	</insert>

	<insert id="createTransactionStock">
		<![CDATA[
			INSERT INTO transaction_his 
			(account_no,tr_seqno,goods_code,tr_kind,trkwa_amt,trforign_amt,tr_number,trbase_num,trtaxbase_num,tr_status,tr_datetime)
			VALUES 
			(
				#{account_no}, 
			 	(select (nvl(max(tr_seqno),0)+1)  from transaction_his where account_no = #{account_no}),
				to_number(#{goods_code}),
				3,
				to_number(#{tr_amt}),
				0,
				to_number(#{tr_number}),
				to_number(#{curprice}),
				to_number(#{curprice}),
				1,
				sysdate
			)
		]]>
	</insert>


</mapper>
